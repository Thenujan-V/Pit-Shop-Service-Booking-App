plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.4.0'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'com.google.protobuf' version '0.9.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2024.0.0")
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	runtimeOnly 'com.h2database:h2'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	compileOnly 'org.springframework.boot:spring-boot-devtools'

	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

//	implementation 'org.springframework.boot:spring-boot-starter'
//	implementation 'net.devh:grpc-client-spring-boot-starter:2.14.0'

//	implementation 'io.grpc:grpc-netty:1.56.0'

	implementation 'io.grpc:grpc-protobuf:1.48.0'
	implementation 'io.grpc:grpc-stub:1.48.0'
	implementation 'io.grpc:grpc-census:1.48.0'
	implementation 'net.devh:grpc-spring-boot-starter:3.1.0.RELEASE'
	implementation 'javax.annotation:javax.annotation-api:1.3.2'
	implementation 'com.google.protobuf:protobuf-java:3.21.1'
	implementation 'com.google.protobuf:protobuf-java-util:3.21.1'

}


protobuf {
	protoc {
		artifact = "com.google.protobuf:protoc:3.19.1"
	}
	plugins {
		grpc {
			artifact = "io.grpc:protoc-gen-grpc-java:1.42.0"
		}
	}
	generateProtoTasks {
		all().each { task ->
			task.plugins {
				grpc {}
			}
			task.descriptorSetOptions.path = "${projectDir}/src/main/proto/my_service_descriptor.pb"
			task.generateDescriptorSet = true
			task.descriptorSetOptions.includeSourceInfo = true
			task.descriptorSetOptions.includeImports = true
		}
	}
}

sourceSets {
	main {
		java {
			srcDirs "build/generated/source/proto/main/java"
			srcDirs "build/generated/source/proto/main/grpc"
		}
	}
}


tasks.named('test') {
	useJUnitPlatform()
}
